name: 🚀 Build & Release
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions: write-all
jobs:
  docker-push:
    name: 🐳 Build and push Docker image
    runs-on: ubuntu-24.04
    env:
      IMAGE: ghcr.io/${{github.repository_owner}}/dinogram
    steps:
      - name: 🔑 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 🏷️ Prepare Docker tag
        run: echo "DOCKER_TAG=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV # Remove leading v

      - name: 📥 Check out repository code
        uses: actions/checkout@main

      - name: 🏗️ Build Docker image
        run: docker build --tag $IMAGE:$DOCKER_TAG --tag $IMAGE:latest .

      - name: 📤 Push Docker image
        run: docker push $IMAGE --all-tags

  deno-deploy:
    name: 🦕 Deploy on remote VM
    runs-on: ubuntu-24.04
    needs: docker-push
    steps:
      - name: 📥 Check out repository code
        uses: actions/checkout@main

      - name: 🔑 Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: ⚙️ Setup Docker context
        run: |
          docker context create remote --docker "host=${{ secrets.DOCKER_HOST }}"
          docker context use remote

      - name: 🐳 Deploy with Docker Compose
        run: docker compose --file compose.prod.yml up -d
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
          TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}

      - name: 🧹 Prune Docker resources
        run: docker system prune --force
